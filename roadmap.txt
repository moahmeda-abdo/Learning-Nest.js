Source : https://www.youtube.com/playlist?list=PLOldSEMXUdZsFAEJwxYkE83dhm1ZkWEOL
road map 
1-  Modules
        A module is a class annotated with a @Module() decorator. The @Module() decorator provides metadata that Nest makes use of to organize the application structure.

2-  controllers
        Controllers are responsible for handling incoming requests and returning responses to the client.

3- Services
        * returning data
        * Common Use Cases:
                - Interacting with databases
                - Making HTTP requests
                - Performing complex calculations
                - Implementing business rules

4- Middlewares
        Middleware is a function which is called before the route handler. Middleware functions have access to the request and response objects, and the next() middleware function in the applicationâ€™s request-response cycle. The next middleware function is commonly denoted by a variable named next.

5- Exception filters
        Nest comes with a built-in exceptions layer which is responsible for processing all unhandled exceptions across an application. When an exception is not handled by your application code, it is caught by this layer, which then automatically sends an appropriate user-friendly response.

        


